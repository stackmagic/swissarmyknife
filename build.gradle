plugins {
	id 'java'
	id 'jacoco'
	id 'groovy'
	id 'maven-publish'
	id 'project-report'
	id 'com.jfrog.bintray' version '1.8.4'
}

description = 'Miscellaneous java utilities'
group = 'net.swisstech'
version = '2.1.0'

// normal repositories and dependencies
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

/*
 * DEPENDENCIES
 */
ext.versions = [
		  slf4j  : '1.8.0-beta4'
		, testng : '7.4.0'
		, mockito: '1.10.19'
		, logger : '1.1.0'
]

dependencies {
	implementation "net.swisstech:logger:${versions.logger}"

	testImplementation "org.slf4j:slf4j-simple:${versions.slf4j}"
	testImplementation "org.testng:testng:${versions.testng}"
	testImplementation "org.mockito:mockito-all:${versions.mockito}"
}

/*
 * generate the number utils classes & tests by calling the python generator script
 */
task generateNumberUtilsTest(type: Exec) {

	tasks.compileTestJava.dependsOn name

	// where to put the generated sources
	ext.destinationDir = "${buildDir}/generated-sources/number-utils-test"

	// configure task to generate the logger code
	commandLine = [ 'python', 'src/main/python/generate_number_utils_test.py', ext.destinationDir ]

	// only regenerate when the source file has changed
	inputs.dir( new File("${buildDir}/../src/main/python"))
	outputs.dir(new File("${ext.destinationDir}"))
}
sourceSets.test.java.srcDirs += generateNumberUtilsTest.destinationDir

task generateNumberUtils(type: Exec) {

	tasks.generateNumberUtilsTest.dependsOn name
	tasks.compileJava.dependsOn name

	// where to put the generated sources
	ext.destinationDir = "${buildDir}/generated-sources/number-utils"

	// configure task to generate the logger code
	commandLine = [ 'python', 'src/main/python/generate_number_utils.py', ext.destinationDir ]

	// only regenerate when the source file has changed
	inputs.dir( new File("${buildDir}/../src/main/python"))
	outputs.dir(new File("${ext.destinationDir}"))
}
sourceSets.main.java.srcDirs += generateNumberUtils.destinationDir

/*
 * UNIT TESTING
 */
jacoco {
	toolVersion = "0.8.6"
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

test {
	useTestNG()
	testLogging.showStandardStreams = true
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

/*
 * WRAPPER
 */
wrapper {
	gradleVersion = '6.8'
}

/*
 * PACKAGING
 */
task sourceJar(type: Jar) {
	from sourceSets.main.allSource
}

/*
 * PUBLISHING
 */
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourceJar {
				classifier 'sources'
			}
		}
	}
}

bintray {
	// key and user must be in your ~/.gradle/gradle.properties
	user = project.hasProperty('swisstech_bintray_user') ? project.swisstech_bintray_user : System.getenv('SWISSTECH_BINTRAY_USER')
	key = project.hasProperty('swisstech_bintray_apikey') ? project.swisstech_bintray_apikey : System.getenv('SWISSTECH_BINTRAY_KEY')
	dryRun = false
	publish = true
	publications = ['mavenJava']
	pkg {
		repo = 'maven'
		name = project.name
		desc = project.description
		licenses = ['Apache-2.0']
		websiteUrl = "https://github.com/stackmagic/${project.name}"
		vcsUrl = "https://github.com/stackmagic/${project.name}.git"
		issueTrackerUrl = "https://github.com/stackmagic/${project.name}/issues"
		publicDownloadNumbers = true
		version {
			name = project.version
			desc = project.description
		}
	}
}
