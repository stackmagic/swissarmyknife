plugins {
	id 'java'
	id 'groovy'
	id 'jacoco'
	id 'signing'
	id 'maven-publish'
	id 'project-report'
	id('io.github.gradle-nexus.publish-plugin') version '1.1.0'
}

description = 'Miscellaneous java utilities'
group = 'net.swisstech'
version = '2.2.0'

/*
 * REPOSITORIES
 */
repositories {
	mavenLocal()
	mavenCentral()
}

/*
 * DEPENDENCIES
 */
ext.versions = [
		slf4j    : '1.8.0-beta4'
		, testng : '7.4.0'
		, mockito: '1.10.19'
		, logger : '2.0.1'
]

dependencies {
	implementation "net.swisstech:logger:${versions.logger}"

	testImplementation "org.slf4j:slf4j-simple:${versions.slf4j}"
	testImplementation "org.testng:testng:${versions.testng}"
	testImplementation "org.mockito:mockito-all:${versions.mockito}"
}

/*
 * generate the number utils classes & tests by calling the python generator script
 */
task generateNumberUtilsTest(type: Exec) {

	tasks.compileTestJava.dependsOn name

	// where to put the generated sources
	ext.destinationDir = "${buildDir}/generated-sources/number-utils-test"

	// configure task to generate the logger code
	commandLine = ['python', 'src/main/python/generate_number_utils_test.py', ext.destinationDir]

	// only regenerate when the source file has changed
	inputs.dir(new File("${buildDir}/../src/main/python"))
	outputs.dir(new File("${ext.destinationDir}"))
}
sourceSets.test.java.srcDirs += generateNumberUtilsTest.destinationDir

task generateNumberUtils(type: Exec) {

	tasks.generateNumberUtilsTest.dependsOn name
	tasks.compileJava.dependsOn name

	// where to put the generated sources
	ext.destinationDir = "${buildDir}/generated-sources/number-utils"

	// configure task to generate the logger code
	commandLine = ['python', 'src/main/python/generate_number_utils.py', ext.destinationDir]

	// only regenerate when the source file has changed
	inputs.dir(new File("${buildDir}/../src/main/python"))
	outputs.dir(new File("${ext.destinationDir}"))
}
sourceSets.main.java.srcDirs += generateNumberUtils.destinationDir

/*
 * UNIT TESTING
 */
jacoco {
	toolVersion = "0.8.6"
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

test {
	useTestNG()
	testLogging.showStandardStreams = true
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

tasks.check.dependsOn jacocoTestReport

/*
 * WRAPPER
 */
wrapper {
	gradleVersion = '6.8'
}

/*
 * PACKAGING & PUBLISHING
 */
java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from(components.java)
			pom {
				name = project.name
				description = project.description
				url = 'https://github.com/stackmagic/swissarmyknife'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'stackmagic'
						name = 'Patrick Huber'
						email = 'stackmagic@gmail.com'
					}
				}
				scm {
					connection = "scm:git:ssh://git@github.com:stackmagic/${project.name}.git"
					developerConnection = "scm:git:ssh://git@github.com:stackmagic/${project.name}.git"
					url = "https://github.com/stackmagic/${project.name}.git"
				}
			}
		}
	}
}

nexusPublishing {
	repositories {
		sonatype {
			nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
			snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
			stagingProfileId = project.findProperty('stagingProfileId')
			username = project.findProperty('sonatypeUsername')
			password = project.findProperty('sonatypePassword')
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
