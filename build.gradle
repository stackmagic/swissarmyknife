
plugins {
	id 'java'
	id 'jacoco'
	id 'groovy'
	id 'maven-publish'
	id 'project-report'
	id 'com.jfrog.bintray' version '1.8.4'
}

description = 'Miscellaneous java utilities'
group       = 'net.swisstech'
version     = '2.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

/*
 * REPOSITORIES
 */
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

/*
 * DEPENDENCIES
 */
ext.versions = [
		  slf4j   : '1.8.0-beta4'
		, testng  : '7.3.0'
		, mockito : '1.10.19'
		, logger  : '1.1.0'
]

dependencies {
	compile     "net.swisstech:logger:${versions.logger}"

	testCompile "org.slf4j:slf4j-simple:${versions.slf4j}"
	testCompile "org.testng:testng:${versions.testng}"
	testCompile "org.mockito:mockito-all:${versions.mockito}"
}

/*
 * UNIT TESTING
 */
jacocoTestReport {
	reports.html.destination = file("${reportsDir}/jacoco/${name}")
}

test {
	useTestNG()
	testLogging.showStandardStreams = true

	jacoco {
		destinationFile = file("${buildDir}/jacoco.ut.exec")
		classDumpDir = file("${buildDir}/jacoco/classpathdumps")
	}
}

/*
 * WRAPPER
 */
wrapper {
	gradleVersion = '6.6'
}

/*
 * PACKAGING
 */
task sourceJar(type: Jar) {
	from sourceSets.main.allSource
}

/*
 * PUBLISHING
 */
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourceJar {
				classifier 'sources'
			}
		}
	}
}

bintray {
	// key and user must be in your ~/.gradle/gradle.properties
	user         = project.hasProperty('swisstech_bintray_user')   ? project.swisstech_bintray_user   : System.getenv('SWISSTECH_BINTRAY_USER')
	key          = project.hasProperty('swisstech_bintray_apikey') ? project.swisstech_bintray_apikey : System.getenv('SWISSTECH_BINTRAY_KEY')
	dryRun       = false
	publish      = true
	publications = [ 'mavenJava' ]
	pkg {
		repo            = 'maven'
		name            = project.name
		desc            = project.description
		licenses        = [ 'Apache-2.0' ]
		websiteUrl      = "https://github.com/stackmagic/${project.name}"
		vcsUrl          = "https://github.com/stackmagic/${project.name}.git"
		issueTrackerUrl = "https://github.com/stackmagic/${project.name}/issues"
		publicDownloadNumbers = true
		version {
			name = project.version
			desc = project.description
		}
	}
}
